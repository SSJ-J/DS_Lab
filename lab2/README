# DS_Lab2 DSDV
沈斯杰   5130379036  ds_ssj@sjtu.edu.cn

一 文件介绍
dsdv.cc 主函数
dsdv_table.{h, cc} 路由算法的主要控制逻辑，以及用到的类和结构体
dsdv_transfer.{h, cc} 网络层，负责传输路由表
test.py 做一些测试，不加参数运行可以直接开6个文件并执行，参数k表示终止dsdv进程，还有其他调试用参数
dat1/dat2  两套测试文件（6个节点）

二 程序架构
    这个程序的架构有两层，一是传输层，二是控制逻辑层。在控制逻辑层中，开了两个线程，其中一个线程轮询接受别的路由器发过来的路由表，另一个主线程的逻辑主要有：
    （1）轮询文件，看是否改变，如果有变化，那么给自己的序列号seq+2，如果到别人的路断了，那么在自己的路由表内，到达那个节点的距离为无穷，并序列号加1（变为奇数）
         总之，自己加自己的序列号总是加2，帮别人加的序列号加1
    （2）接收到路由表之后跟新，首先按照一般的DV，根据下一跳和接受到的路由表更新到最新版本，以及邻居的最新版本
         之后，在进行最短路径的更新，条件是序列号一样选最短，序列号比自己大，以大的为准
    （3）强调一下seq的更新，除了上述讲的配置文件改变要变化seq的两种情况外，每一个节点定期把自己的seq+2
         我在程序里面写的是10个发送间隔更新一次，这样可以缩短cost大大增加时，收敛过慢，也就是至多10个周期内可以进行收敛
    （4）发送周期为10s一次，根据文档里面所写的。
         （如果觉得发送太慢，可以在dsdv_table.cc中修改SEND_INTERVEL,是为发送间隔10s，SEQ_PERIOD是为自己更新的周期，目前为10个发送间隔）

三 假设
    （1）不考虑配置文件初始时，就有cost=-1的情况。假设之后在运行过程中出现-1
    （2）每次修改文件，只能同时改一条路径
    （3）同时保存，被修改的两个文件

四 执行方法
     make之后，可以按照文档要求运行，也可以用test.py脚本
     ./test.py  运行当前目录下6个文件[a-f].dat
     ./test.py k  结束当前dsdv进程
     ./test.py t <dir>  运行当前目录下dir目录下的6个文件[a-f].dat （当前目录下dat1和dat2是我自己写的测试数据）

五 其他
    这次的lab自己做了点测试，主要是路径cost变大变小，以及cost的断开和恢复，测试做得感觉还不是很重发，但是自己测试下来没什么大问题
    其他情况还请助教手下留情，谢谢！

2016-03-27
